<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{acdc932b-4b2a-48e9-ba0e-fd9073aeab15}</ProjectGuid>
    <RootNamespace>UnityDLLforCPP</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)bin\</OutDir>
    <IntDir>$(SolutionDir)obj\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)bin\</OutDir>
    <IntDir>$(SolutionDir)obj\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)bin\</OutDir>
    <IntDir>$(SolutionDir)obj\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)bin\</OutDir>
    <IntDir>$(SolutionDir)obj\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PostBuildEvent>
      <Command>if exist $(SolutionDir)../BuildEvent\Plugins (
goto CASE1
)
goto CASE2

REM シンボリックリンクが存在している
:CASE1
echo ケース1
if exist $(SolutionDir)../BuildEvent/Pluginsのパス.txt (
call $(SolutionDir)../BuildEvent\SubRoutines.bat Clean $(SolutionDir)../BuildEvent/Pluginsのパス.txt
@echo 不要になった"Pluginsのパス.txt"を削除しました。
)
if exist $(SolutionDir)..\BuildEvent\Plugins\$(TargetFileName) (
echo UnityPluginsの削除
call $(SolutionDir)../BuildEvent\SubRoutines.bat Clean $(SolutionDir)..\BuildEvent\Plugins\$(TargetFileName)
)
call $(SolutionDir)../BuildEvent\SubRoutines.bat Copy  $(OutDir)$(TargetFileName) $(SolutionDir)..\BuildEvent\Plugins
call $(SolutionDir)../BuildEvent\SubRoutines.bat Clean $(IntDir)
exit /b

REM シンボリックリンクが存在しない
:CASE2
echo ケース2
@setlocal enabledelayedexpansion
if not exist $(SolutionDir)../BuildEvent/Pluginsのパス.txt (
@echo テキストファイルがない
type nul &gt; $(SolutionDir)../BuildEvent/Pluginsのパス.txt
$(SolutionDir)../BuildEvent/MsgBox.bat Assets/Pluginsまでのシンボリックリンクが作成されていません。作成するためにPluginsのパス.txtにPluginsフォルダまでのパスを入力してください。 再試行してシンボリックリンクの作成
exit /b
)
call $(SolutionDir)../BuildEvent\MakePluginSymbolicLink.bat $(SolutionDir)../BuildEvent/Plugins
call $(SolutionDir)../BuildEvent\SubRoutines.bat Copy  $(OutDir)$(TargetFileName) $(SolutionDir)..\BuildEvent\Plugins
call $(SolutionDir)../BuildEvent\SubRoutines.bat Clean  $(SolutionDir)../BuildEvent/Pluginsのパス.txt
type nul &gt; $(SolutionDir)../BuildEvent/Pluginsのパス.txt
exit /b</Command>
      <Message>Assets/Pluginsのシンボリックリンクを作成し、PluginsフォルダにビルドしたDLLをコピーする。</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PostBuildEvent>
      <Command>if exist $(SolutionDir)../BuildEvent\Plugins (
goto CASE1
)
goto CASE2

REM シンボリックリンクが存在している
:CASE1
echo ケース1
if exist $(SolutionDir)../BuildEvent/Pluginsのパス.txt (
call $(SolutionDir)../BuildEvent\SubRoutines.bat Clean $(SolutionDir)../BuildEvent/Pluginsのパス.txt
@echo 不要になった"Pluginsのパス.txt"を削除しました。
)
if exist $(SolutionDir)..\BuildEvent\Plugins\$(TargetFileName) (
echo UnityPluginsの削除
call $(SolutionDir)../BuildEvent\SubRoutines.bat Clean $(SolutionDir)..\BuildEvent\Plugins\$(TargetFileName)
)
call $(SolutionDir)../BuildEvent\SubRoutines.bat Copy  $(OutDir)$(TargetFileName) $(SolutionDir)..\BuildEvent\Plugins
call $(SolutionDir)../BuildEvent\SubRoutines.bat Clean $(IntDir)
exit /b

REM シンボリックリンクが存在しない
:CASE2
echo ケース2
@setlocal enabledelayedexpansion
if not exist $(SolutionDir)../BuildEvent/Pluginsのパス.txt (
@echo テキストファイルがない
type nul &gt; $(SolutionDir)../BuildEvent/Pluginsのパス.txt
$(SolutionDir)../BuildEvent/MsgBox.bat Assets/Pluginsまでのシンボリックリンクが作成されていません。作成するためにPluginsのパス.txtにPluginsフォルダまでのパスを入力してください。 再試行してシンボリックリンクの作成
exit /b
)
call $(SolutionDir)../BuildEvent\MakePluginSymbolicLink.bat $(SolutionDir)../BuildEvent/Plugins
call $(SolutionDir)../BuildEvent\SubRoutines.bat Copy  $(OutDir)$(TargetFileName) $(SolutionDir)..\BuildEvent\Plugins
call $(SolutionDir)../BuildEvent\SubRoutines.bat Clean  $(SolutionDir)../BuildEvent/Pluginsのパス.txt
type nul &gt; $(SolutionDir)../BuildEvent/Pluginsのパス.txt
exit /b</Command>
      <Message>Assets/Pluginsのシンボリックリンクを作成し、PluginsフォルダにビルドしたDLLをコピーする。</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PostBuildEvent>
      <Command>if exist $(SolutionDir)test (
call $(SolutionDir)../BuildEvent\SubRoutines.bat Clean $(SolutionDir)test
)
if exist $(SolutionDir)../BuildEvent\Plugins (
goto CASE1
)
goto CASE2

REM シンボリックリンクが存在している
:CASE1
echo ケース1
if exist $(SolutionDir)../BuildEvent/Pluginsのパス.txt (
call $(SolutionDir)../BuildEvent\SubRoutines.bat Clean $(SolutionDir)../BuildEvent/Pluginsのパス.txt
@echo 不要になった"Pluginsのパス.txt"を削除しました。
)
if exist $(SolutionDir)..\BuildEvent\Plugins\$(TargetFileName) (
echo UnityPluginsの削除
call $(SolutionDir)../BuildEvent\SubRoutines.bat Clean $(SolutionDir)..\BuildEvent\Plugins\$(TargetFileName)
)
call $(SolutionDir)../BuildEvent\SubRoutines.bat Copy  $(OutDir)$(TargetFileName) $(SolutionDir)..\BuildEvent\Plugins
::call $(SolutionDir)../BuildEvent\SubRoutines.bat Clean $(IntDir)
exit /b

REM シンボリックリンクが存在しない
:CASE2
echo ケース2
@setlocal enabledelayedexpansion
if not exist $(SolutionDir)../BuildEvent/Pluginsのパス.txt (
@echo テキストファイルがない
type nul &gt; $(SolutionDir)../BuildEvent/Pluginsのパス.txt
$(SolutionDir)../BuildEvent/MsgBox.bat Assets/Pluginsまでのシンボリックリンクが作成されていません。作成するためにPluginsのパス.txtにPluginsフォルダまでのパスを入力してください。 再試行してシンボリックリンクの作成
exit /b
)
call $(SolutionDir)../BuildEvent\MakePluginSymbolicLink.bat $(SolutionDir)../BuildEvent/Plugins
call $(SolutionDir)../BuildEvent\SubRoutines.bat Copy  $(OutDir)$(TargetFileName) $(SolutionDir)..\BuildEvent\Plugins
call $(SolutionDir)../BuildEvent\SubRoutines.bat Clean  $(SolutionDir)../BuildEvent/Pluginsのパス.txt
type nul &gt; $(SolutionDir)../BuildEvent/Pluginsのパス.txt
exit /b</Command>
      <Message>Assets/Pluginsのシンボリックリンクを作成し、PluginsフォルダにビルドしたDLLをコピーする。</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PostBuildEvent>
      <Command>if exist $(SolutionDir)test (
call $(SolutionDir)../BuildEvent\SubRoutines.bat Clean $(SolutionDir)test
)
if exist $(SolutionDir)../BuildEvent\Plugins (
goto CASE1
)
goto CASE2

REM シンボリックリンクが存在している
:CASE1
echo ケース1
if exist $(SolutionDir)../BuildEvent/Pluginsのパス.txt (
call $(SolutionDir)../BuildEvent\SubRoutines.bat Clean $(SolutionDir)../BuildEvent/Pluginsのパス.txt
@echo 不要になった"Pluginsのパス.txt"を削除しました。
)
if exist $(SolutionDir)..\BuildEvent\Plugins\$(TargetFileName) (
echo UnityPluginsの削除
call $(SolutionDir)../BuildEvent\SubRoutines.bat Clean $(SolutionDir)..\BuildEvent\Plugins\$(TargetFileName)
)
call $(SolutionDir)../BuildEvent\SubRoutines.bat Copy  $(OutDir)$(TargetFileName) $(SolutionDir)..\BuildEvent\Plugins
call $(SolutionDir)../BuildEvent\SubRoutines.bat Clean $(IntDir)
exit /b

REM シンボリックリンクが存在しない
:CASE2
echo ケース2
@setlocal enabledelayedexpansion
if not exist $(SolutionDir)../BuildEvent/Pluginsのパス.txt (
@echo テキストファイルがない
type nul &gt; $(SolutionDir)../BuildEvent/Pluginsのパス.txt
$(SolutionDir)../BuildEvent/MsgBox.bat Assets/Pluginsまでのシンボリックリンクが作成されていません。作成するためにPluginsのパス.txtにPluginsフォルダまでのパスを入力してください。 再試行してシンボリックリンクの作成
exit /b
)
call $(SolutionDir)../BuildEvent\MakePluginSymbolicLink.bat $(SolutionDir)../BuildEvent/Plugins
call $(SolutionDir)../BuildEvent\SubRoutines.bat Copy  $(OutDir)$(TargetFileName) $(SolutionDir)..\BuildEvent\Plugins
call $(SolutionDir)../BuildEvent\SubRoutines.bat Clean  $(SolutionDir)../BuildEvent/Pluginsのパス.txt
type nul &gt; $(SolutionDir)../BuildEvent/Pluginsのパス.txt
exit /b</Command>
      <Message>Assets/Pluginsのシンボリックリンクを作成し、PluginsフォルダにビルドしたDLLをコピーする。</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="Sample.hpp" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="Sample.cpp" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>